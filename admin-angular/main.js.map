{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-directive/forbidden-name.directive.ts","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/breadcrumb/breadcrumb.component.css","webpack:///./src/app/breadcrumb/breadcrumb.component.html","webpack:///./src/app/breadcrumb/breadcrumb.component.ts","webpack:///./src/app/category/category.component.css","webpack:///./src/app/category/category.component.html","webpack:///./src/app/category/category.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/product-add/product-add.component.css","webpack:///./src/app/product-add/product-add.component.html","webpack:///./src/app/product-add/product-add.component.ts","webpack:///./src/app/product/product.component.css","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/services/book.service.ts","webpack:///./src/app/services/genre.service.ts","webpack:///./src/app/view-models/book.ts","webpack:///./src/app/view-models/genre.ts","webpack:///./src/app/view-models/image.ts","webpack:///./src/app/view-models/size.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n/** A hero's name can't match the given regular expression */\nexport function forbiddenNameValidator(nameRe: RegExp): ValidatorFn {\n  return (control: AbstractControl): {[key: string]: any} | null => {\n    const forbidden = nameRe.test(control.value);\n    return forbidden ? {'forbiddenName': {value: control.value}} : null;\n  };\n}\n\n@Directive({\n  selector: '[appForbiddenName]',\n  providers: [{provide: NG_VALIDATORS, useExisting: ForbiddenValidatorDirective, multi: true}]\n})\nexport class ForbiddenValidatorDirective implements Validator {\n  @Input('appForbiddenName') forbiddenName: string;\n\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    return this.forbiddenName ? forbiddenNameValidator(new RegExp(this.forbiddenName, 'i'))(control)\n                              : null;\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { CategoryComponent } from '../category/category.component';\nimport { ProductComponent } from '../product/product.component';\nimport { ProductAddComponent } from '../product-add/product-add.component';\n\nconst routes: Routes = [\n  // { path: '', redirectTo: '', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'category', component: CategoryComponent },\n  { path: 'product', component: ProductComponent },\n  { path: 'product-add', component: ProductAddComponent }\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<body class=\\\"app header-fixed sidebar-fixed aside-menu-fixed sidebar-lg-show\\\">\\n  <header class=\\\"app-header navbar\\\">\\n            <button class=\\\"navbar-toggler sidebar-toggler d-lg-none mr-auto\\\" type=\\\"button\\\" data-toggle=\\\"sidebar-show\\\" title=\\\"Show/Hide Menu\\\">\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" href=\\\"\\\" routerLink=\\\"/dashboard\\\">\\n                <span class=\\\"navbar-brand-full\\\" alt=\\\"Brand Logo Full\\\">Admin Panel</span>\\n                <span class=\\\"navbar-brand-minimized\\\" width=\\\"30\\\" height=\\\"30\\\" alt=\\\"Brand Logo Mini\\\">B</span>\\n            </a>\\n        <button class=\\\"navbar-toggler sidebar-toggler d-md-down-none sidebar-minimizer brand-minimizer\\\" type=\\\"button\\\" title=\\\"Switch side-menu\\\"><i class=\\\"fab fa-elementor text-primary\\\"></i></button>\\n    <ul class=\\\"nav navbar-nav d-md-down-none ml-auto\\\">\\n      <li class=\\\"nav-item px-3\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"\\\" routerLink=\\\"/dashboard\\\">Dashboard</a>\\n      </li>\\n      <li class=\\\"nav-item px-3\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"https://bao-doan.github.io\\\">Homepage</a>\\n      </li>\\n      <li class=\\\"nav-item px-3\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalAdminLogout\\\">Logout</a>\\n      </li>\\n    </ul>\\n    \\n    \\n    <button class=\\\"navbar-toggler aside-menu-toggler d-lg-none\\\" type=\\\"button\\\" data-toggle=\\\"aside-menu-show\\\">\\n      <i class=\\\"far fa-compass text-dark\\\" title=\\\"Go Dashboard or go Homepage\\\"></i>\\n    </button>\\n  </header>\\n  <div class=\\\"app-body\\\">\\n      <div class=\\\"sidebar\\\">\\n          <nav class=\\\"sidebar-nav\\\">\\n              <ul class=\\\"nav\\\">\\n\\n                  <li class=\\\"nav-title text-warning\\\">ADMIN</li>\\n                  <li class=\\\"nav-item\\\">\\n                      <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLinkActive=\\\"active\\\">\\n                          <i class=\\\"fas fa-user nav-icon\\\"></i> Profile\\n                      </a>\\n                  </li>\\n                  <li class=\\\"nav-title text-warning\\\">ACCOUNTS</li>\\n                  <li class=\\\"nav-item\\\">\\n                          <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLinkActive=\\\"active\\\">\\n                              <i class=\\\"far fa-address-book nav-icon\\\"></i> Manage Users\\n                          </a>\\n                      </li>\\n                  <li class=\\\"nav-item\\\">\\n                      <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLinkActive=\\\"active\\\">\\n                          <i class=\\\"far fa-address-book nav-icon\\\"></i> Manage Staffs\\n                      </a>\\n                  </li>\\n                  <li class=\\\"nav-title text-warning\\\">SHOP</li>\\n                  <li class=\\\"nav-item\\\" >\\n                          <a class=\\\"nav-link\\\" href=\\\"\\\" routerLink=\\\"/category\\\" routerLinkActive=\\\"active\\\">\\n                              <i class=\\\"fas fa-book nav-icon\\\"></i> All Categories\\n                          </a>\\n                      </li>\\n                  <li class=\\\"nav-item\\\" >\\n                      <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/product\\\" routerLinkActive=\\\"active\\\">\\n                          <i class=\\\"fas fa-book nav-icon\\\"></i> All Products\\n                      </a>\\n                  </li>\\n                  <li class=\\\"nav-item\\\">\\n                      <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLinkActive=\\\"active\\\">\\n                          <i class=\\\"fas fa-book nav-icon\\\"></i> Purchase Orders\\n                      </a>\\n                  </li>\\n                  \\n                  <li class=\\\"nav-title text-warning\\\">ARTICLES</li>\\n                  <li class=\\\"nav-item\\\">\\n                      <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLinkActive=\\\"active\\\">\\n                          <i class=\\\"far fa-newspaper nav-icon\\\"></i> Articles\\n                      </a>\\n                  </li>\\n                  <li class=\\\"nav-item\\\">\\n                      <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLinkActive=\\\"active\\\">\\n                          <i class=\\\"far fa-newspaper nav-icon\\\"></i> Add Article\\n                      </a>\\n                  </li>\\n                  \\n                  <li class=\\\"nav-title text-warning\\\">EXTENSION</li>\\n                  \\n                  <li class=\\\"nav-item nav-dropdown\\\">\\n                      <a class=\\\"nav-link nav-dropdown-toggle\\\" href=\\\"#\\\">\\n                          <i class=\\\"fas fa-list-ul nav-icon\\\"></i> Building</a>\\n                      <ul class=\\\"nav-dropdown-items\\\">\\n                          <li class=\\\"nav-item\\\">\\n                              <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"\\\" routerLinkActive=\\\"active\\\">\\n                                  <i class=\\\"nav-icon\\\"></i> One</a>\\n                          </li>\\n                          <li class=\\\"nav-item\\\">\\n                              <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"\\\" routerLinkActive=\\\"active\\\">\\n                                  <i class=\\\"nav-icon\\\"></i> Two</a>\\n                          </li>\\n                      </ul>\\n                  </li>\\n\\n              </ul>\\n          </nav>\\n          <!-- <button class=\\\"sidebar-minimizer brand-minimizer \\\" type=\\\"button\\\"></button> -->\\n      </div>\\n      <main class=\\\"main\\\">\\n          <!-- Breadcrumb-->\\n         <app-breadcrumb></app-breadcrumb>\\n         \\n          <!-- Main content -->\\n          <router-outlet></router-outlet>\\n      </main>\\n    <aside class=\\\"aside-menu\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n            <li class=\\\"nav-item px-3\\\">\\n              <a class=\\\"nav-link\\\" href=\\\"\\\" routerLink=\\\"/dashboard\\\"><i class=\\\"fas fa-tachometer-alt\\\"></i> Dashboard</a>\\n            </li>\\n            <li class=\\\"nav-item px-3\\\">\\n              <a class=\\\"nav-link\\\" href=\\\"https://bao-doan.github.io\\\"><i class=\\\"fas fa-shopping-cart\\\"></i> Shop Page</a>\\n            </li>\\n            <li class=\\\"nav-item px-3\\\">\\n              <a class=\\\"nav-link\\\" href=\\\"#\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalAdminLogout\\\"><i class=\\\"fas fa-sign-out-alt\\\"></i> Logout</a>\\n            </li>\\n          </ul>\\n    </aside>\\n  </div>\\n  <footer class=\\\"app-footer mt-4\\\">\\n      <div>\\n          <a href=\\\"../../index.html\\\">Brand Co., Ltd</a>\\n          <span>&copy; 2018.</span>\\n      </div>\\n      <div class=\\\"ml-auto\\\">\\n          <span>Powered by</span>\\n          <a href=\\\"https://coreui.io\\\">CoreUI</a>\\n      </div>\\n  </footer>\\n</body>\\n<!-- MODAL: Admin Logout -->\\n  <div class=\\\"modal fade\\\" id=\\\"modalAdminLogout\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalAdminLogoutLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Admin Logout</h5>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <p>Are yout sure want to logout?</p>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Yes</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">No</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CategoryComponent } from './category/category.component';\nimport { ProductComponent } from './product/product.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProductAddComponent } from './product-add/product-add.component';\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n// Import Froala Editor.\nimport \"froala-editor/js/froala_editor.pkgd.min.js\";\n\n// Import Angular2 plugin.\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\nimport { ForbiddenValidatorDirective } from './app-directive/forbidden-name.directive';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CategoryComponent,\n    ProductComponent,\n    DashboardComponent,\n    ProductAddComponent,\n    ForbiddenValidatorDirective,\n    BreadcrumbComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    FroalaEditorModule.forRoot(), \n    FroalaViewModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<ol class=\\\"breadcrumb\\\">\\n  <li class=\\\"breadcrumb-item\\\">\\n      <a href=\\\"#\\\">Admin</a>\\n  </li>\\n  <li class=\\\"breadcrumb-item active\\\">Dashboard</li>\\n</ol>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.css']\n})\nexport class BreadcrumbComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-6 col-lg-5 mb-3\\\">\\n      <h5 class=\\\"mb-3\\\">Create New Category</h5>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"formAddCategory\\\">Name</label>\\n          <input [(ngModel)]=\\\"objectGenre.name\\\" (keyup.enter)=\\\"addGenre()\\\" type=\\\"text\\\" id=\\\"formAddCategory\\\" name=\\\"formAddCategory\\\"\\n            class=\\\"form-control myInput-elegant-2 d-inline\\\" #genrename=\\\"ngModel\\\" required minlength=\\\"4\\\" autofocus>\\n          <div *ngIf=\\\"genrename.invalid && (genrename.dirty || genrename.touched)\\\" class=\\\"\\\">\\n            <div *ngIf=\\\"genrename.errors.minlength\\\" class=\\\"alert alert-warning\\\">\\n              Input name must be at least 4 characters long.\\n            </div>\\n          </div>\\n        </div>\\n      <button (click)=\\\"addGenre()\\\" [disabled]=\\\"!(objectGenre.name?.length == 4)\\\" class=\\\"btn btn-success d-block ml-auto\\\">\\n        <i class=\\\"fas fa-plus\\\"></i> Create</button>\\n    </div>\\n    <div class=\\\"col-12\\\">\\n      <table class=\\\"table table-striped table-hover table-outline mb-2\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th class=\\\"d-flex flex-row justify-content-between\\\">\\n              <span>Category</span>\\n              <button (click)=\\\"getGenres()\\\" class=\\\"btn btn-link p-0\\\" type=\\\"button\\\">\\n                <i class=\\\"fas fa-sync-alt\\\"></i> Refresh</button>\\n            </th>\\n          </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"genres\\\" class=\\\"\\\">\\n          <tr *ngFor=\\\"let genre of genres\\\">\\n            <td class=\\\"d-flex flex-row justify-content-between\\\">\\n              <span>{{genre.name}}</span>\\n              <span>\\n                <a (click)=\\\"onSelect(genre)\\\" class=\\\"mr-3\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalEdit\\\" href=\\\"\\\">Edit</a>\\n                <a (click)=\\\"onSelectDelete(genre)\\\" class=\\\"text-danger\\\" title=\\\"Remove\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalDelete\\\" href=\\\"\\\">Delete</a>\\n              </span>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <p>Displaying {{genres?.length || '0 item'}}\\n        <span *ngIf=\\\"genres?.length == 1\\\">item</span>\\n        <span *ngIf=\\\"genres?.length == 0\\\">item</span>\\n        <span *ngIf=\\\"genres?.length\\\">items</span>\\n      </p>\\n      <!-- <p *ngIf=\\\"!genres?.length\\\">\\n        No item to display!\\n      </p> -->\\n    </div>\\n  </div>\\n</div>\\n<!-- Modal: DELETE -->\\n<div *ngIf=\\\"selectedDelete\\\" id=\\\"modalDelete\\\" class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">Confirm delete</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Are you sure want to delete?</p>\\n        <b class=\\\"text-danger\\\">{{selectedDelete.name}} </b>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button (click)=\\\"deleteGenre(selectedDelete)\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Delete</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Keep</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!-- Modal: EDIT -->\\n<div id=\\\"modalEdit\\\" class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">Editing</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div *ngIf=\\\"selectedGenre\\\" class=\\\"modal-body\\\">\\n        <!-- doing -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"formAddCategory\\\">Category:</label>\\n          <input [(ngModel)]=\\\"selectedGenre.name\\\" type=\\\"text\\\" id=\\\"formAddCategory\\\" name=\\\"formAddCategory\\\" class=\\\"form-control myInput-elegant-2\\\"\\n            #genrenameEdit=\\\"ngModel\\\" required minlength=\\\"4\\\">\\n          <div *ngIf=\\\"genrenameEdit.invalid && (genrenameEdit.dirty || genrenameEdit.touched)\\\" class=\\\"\\\">\\n            <div *ngIf=\\\"genrenameEdit.errors.required\\\" class=\\\"alert alert-danger\\\">\\n              Name is required.\\n            </div>\\n            <div *ngIf=\\\"genrenameEdit.errors.minlength\\\" class=\\\"alert alert-warning\\\">\\n              Input name must be at least 4 characters long.\\n            </div>\\n          </div>\\n        </div>\\n        <p>Name: {{selectedGenre.name}}</p>\\n        <p>Id: {{selectedGenre._id}}</p>\\n        <p>Created date: {{selectedGenre.create_date}}</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button data-target=\\\"#modalConfirmUpdate\\\" data-toggle=\\\"modal\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Update</button>\\n        <!-- <button (click)=\\\"updateGenre()\\\" class=\\\"btn btn-ghost-primary\\\">\\n            <i class=\\\"fas fa-check\\\"></i> Update</button> -->\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Discard</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!-- MODAL: Confirm Update -->\\n<div id=\\\"modalConfirmUpdate\\\" class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">Confirm Update</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Are you sure want to update?</p>\\n        <p *ngIf=\\\"selectedGenre\\\">To: {{selectedGenre.name}}</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button (click)=\\\"updateGenre()\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Yes</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">No</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { GenreService } from '../services/genre.service';\nimport { Genre } from '../view-models/genre';\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n  genres: Genre[];\n  name: string;\n  selectedGenre: Genre;\n  selectedDelete: Genre;\n  updatingGenre = this.selectedDelete;\n  objectGenre = new Genre();\n  on_s: string = \"items\";\n  // objectGenre: Genre;\n  // updatingGenre= new Genre(this.selectedGenre.name);\n  constructor(private genreService: GenreService, private location: Location, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.getGenres();\n    // this.countGenres();\n  }\n  onSelect(genre):void {\n    this.selectedGenre = genre;\n  }\n  onSelectDelete(genre):void {\n    this.selectedDelete = genre;\n  }\n  getGenres(): void {\n    this.genreService.getGenres().subscribe(z => this.genres = z);\n  };\n  // countGenres(): void {\n  //   if (this.genres.length == 1 ) {\n\n  //   }\n  // }\n  addGenre(): void {\n    if (this.objectGenre.name.length > 0) {\n      this.genreService.addGenre(this.objectGenre).subscribe(_ => {\n        this.objectGenre.name = \"\";\n        this.genres.push(_);\n      });\n    }\n  }\n  deleteGenre(genre: Genre): void {\n    this.genres = this.genres.filter(h => h !== genre);\n    this.genreService.deleteGenre(genre).subscribe(\n      \n    );\n  }\n  updateGenre(): void {\n    this.genreService.updateGenre(this.selectedGenre)\n      .subscribe();\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <form #heroForm=\\\"ngForm\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n                <h3 class=\\\"text-primary mb-3\\\">Create New Product</h3>\\n                <a routerLink=\\\"/product\\\" href=\\\"\\\" class=\\\"text-dark\\\">\\n                    <i class=\\\"far fa-address-book\\\"></i> All products</a>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <button (click)=\\\"addBook()\\\" class=\\\"btn btn-success d-block ml-auto\\\" [disabled]=\\\"heroForm.invalid\\\">\\n                    <i class=\\\"fas fa-plus\\\"></i> Create</button>\\n            </div>\\n            <div class=\\\"col-12 mb-3\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"formAddBookTitle\\\">Title</label>\\n                    <input type=\\\"text\\\" id=\\\"formAddBookTitle\\\" name=\\\"formAddBookTitle\\\" class=\\\"form-control myInput-elegant-2\\\" [(ngModel)]=\\\"objectBook.title\\\" #title=\\\"ngModel\\\" required minlength=\\\"4\\\" autofocus>\\n                    <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\" class=\\\"\\\">\\n                        <div *ngIf=\\\"title.errors.required\\\" class=\\\"alert alert-danger\\\">\\n                            Title is required.\\n                        </div>\\n                        <div *ngIf=\\\"title.errors.minlength\\\" class=\\\"alert alert-warning\\\">\\n                            Title must be at least 4 characters long.\\n                        </div>\\n                    </div>\\n                </div>\\n    \\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"formAddBookAuthor\\\">Author (required)</label>\\n                    <input type=\\\"text\\\" id=\\\"formAddBookAuthor\\\" name=\\\"formAddBookAuthor\\\" class=\\\"form-control myInput-elegant-2\\\" [(ngModel)]=\\\"objectBook.author\\\" #author=\\\"ngModel\\\" required minlength=\\\"4\\\">\\n                    <div *ngIf=\\\"author.invalid && (author.dirty || author.touched)\\\" class=\\\"\\\">\\n                            <div *ngIf=\\\"author.errors.required\\\" class=\\\"alert alert-danger\\\">\\n                                Author is required.\\n                            </div>\\n                            <div *ngIf=\\\"author.errors.minlength\\\" class=\\\"alert alert-warning\\\">\\n                                Author must be at least 4 characters long.\\n                            </div>\\n                        </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"formAddBookPublisher\\\">Publisher (required)</label>\\n                    <input type=\\\"text\\\" id=\\\"formAddBookPublisher\\\" name=\\\"formAddBookPublisher\\\" class=\\\"form-control myInput-elegant-2\\\" [(ngModel)]=\\\"objectBook.publisher\\\" #publisher=\\\"ngModel\\\" required minlength=\\\"4\\\">\\n                    <div *ngIf=\\\"publisher.invalid && (publisher.dirty || publisher.touched)\\\" class=\\\"\\\">\\n                            <div *ngIf=\\\"publisher.errors.required\\\" class=\\\"alert alert-danger\\\">\\n                                Publisher is required.\\n                            </div>\\n                            <div *ngIf=\\\"publisher.errors.minlength\\\" class=\\\"alert alert-warning\\\">\\n                                Publisher must be at least 4 characters long.\\n                            </div>\\n                        </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <!-- <p *ngIf=\\\"genres\\\">{{genres[0].name}}</p> -->\\n                        <label for=\\\"formAddBookSelectGenre\\\">Genre</label>\\n                        <!-- <select *ngIf=\\\"genres\\\" [(ngModel)]=\\\"objectBook.genre\\\" #genre=\\\"ngModel\\\" class=\\\"form-control\\\" id=\\\"formAddBookSelectGenre\\\" required>\\n                            <option *ngFor=\\\"let x of genres\\\" [selected]=\\\"x.name == genres[0].name\\\" [ngValue]=\\\"x\\\">{{x.name}}</option>\\n                        </select> -->\\n                        <!-- <div *ngIf=\\\"genre.errors && genre.touched\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"genre.errors.required\\\">Genre must be selected</div>\\n                              </div> -->\\n                    </div>\\n                </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"formAddBookPages\\\">Pages</label>\\n                    <input type=\\\"number\\\" min=\\\"0\\\" id=\\\"formAddBookPages\\\" name=\\\"formAddBookPages\\\" class=\\\"form-control myInput-elegant-2\\\" [(ngModel)]=\\\"objectBook.pages\\\" #pages=\\\"ngModel\\\" required>\\n                    <div *ngIf=\\\"pages.invalid && (pages.dirty || pages.touched)\\\" class=\\\"\\\">\\n                        <div *ngIf=\\\"pages.errors.required\\\" class=\\\"alert alert-danger\\\">\\n                            Number is required.\\n                        </div>\\n                </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"formAddBookWeight\\\">Weight</label>\\n                    <input type=\\\"number\\\" min=\\\"0\\\" id=\\\"formAddBookWeight\\\" name=\\\"formAddBookWeight\\\" class=\\\"form-control myInput-elegant-2\\\" [(ngModel)]=\\\"objectBook.weight\\\" #weight=\\\"ngModel\\\" required>\\n                    <div *ngIf=\\\"weight.invalid && (weight.dirty || weight.touched)\\\" class=\\\"\\\">\\n                        <div *ngIf=\\\"weight.errors.required\\\" class=\\\"alert alert-danger\\\">\\n                            Number is required.\\n                        </div>\\n                </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"formAddBookReleaseDate\\\">Release Date</label>\\n                    <input type=\\\"text\\\" id=\\\"formAddBookReleaseDate\\\" name=\\\"formAddBookReleaseDate\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"formAddBookSKU\\\">SKU</label>\\n                    <input type=\\\"text\\\" id=\\\"formAddBookSKU\\\" name=\\\"formAddBookSKU\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"formAddBookPreviousPrice\\\">Previous Price</label>\\n                    <input type=\\\"number\\\" min=\\\"0\\\" id=\\\"formAddBookPreviousPrice\\\" name=\\\"formAddBookPreviousPrice\\\" class=\\\"form-control myInput-elegant-2\\\" [(ngModel)]=\\\"objectBook.previousPrice\\\" #previousPrice=\\\"ngModel\\\" required>\\n                    <div *ngIf=\\\"previousPrice.invalid && (previousPrice.dirty || previousPrice.touched)\\\" class=\\\"\\\">\\n                            <div *ngIf=\\\"previousPrice.errors.required\\\" class=\\\"alert alert-danger\\\">\\n                                Number is required.\\n                            </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"formAddBookSellingPrice\\\">Selling Price</label>\\n                    <input type=\\\"number\\\" min=\\\"0\\\" id=\\\"formAddBookSellingPrice\\\" name=\\\"formAddBookSellingPrice\\\" class=\\\"form-control myInput-elegant-2\\\" [(ngModel)]=\\\"objectBook.sellingPrice\\\" #sellingPrice=\\\"ngModel\\\" required>\\n                    <div *ngIf=\\\"sellingPrice.invalid && (sellingPrice.dirty || sellingPrice.touched)\\\" class=\\\"\\\">\\n                            <div *ngIf=\\\"sellingPrice.errors.required\\\" class=\\\"alert alert-danger\\\">\\n                                Number is required.\\n                            </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-12 col-md-8 mb-3\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"formAddBookImages\\\">Main Image</label>\\n                    <input type=\\\"text\\\" id=\\\"formAddBookImages\\\" name=\\\"formAddBookImages\\\" class=\\\"form-control myInput-elegant-2\\\" [(ngModel)]=\\\"objectBook.images.main\\\" #imagesmain=\\\"ngModel\\\" required minlength=\\\"4\\\">\\n                    <div *ngIf=\\\"imagesmain.invalid && (imagesmain.dirty || imagesmain.touched)\\\" class=\\\"\\\">\\n                        <div *ngIf=\\\"imagesmain.errors.required\\\" class=\\\"alert alert-danger\\\">\\n                            Required a link.\\n                        </div>\\n                    </div>\\n                    <a href=\\\"\\\" class=\\\"text-dark mt-2\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapseReviewImage\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseReviewImage\\\">\\n                        <i class=\\\"far fa-image\\\"></i> View Image</a>\\n                </div>\\n            </div>\\n            <!--  -->\\n            <!-- <div class=\\\"form-group\\\">\\n                <label for=\\\"formAddBookTitle\\\">Title</label>\\n                <input type=\\\"text\\\" id=\\\"formAddBookTitle\\\" name=\\\"formAddBookTitle\\\" class=\\\"form-control myInput-elegant-2\\\" [(ngModel)]=\\\"objectBook.title\\\" #title=\\\"ngModel\\\" required minlength=\\\"4\\\" autofocus>\\n                <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\" class=\\\"\\\">\\n                    <div *ngIf=\\\"title.errors.required\\\" class=\\\"alert alert-danger\\\">\\n                        Title is required.\\n                    </div>\\n                    <div *ngIf=\\\"title.errors.minlength\\\" class=\\\"alert alert-warning\\\">\\n                        Title must be at least 4 characters long.\\n                    </div>\\n                </div>\\n            </div> -->\\n            <!--  -->\\n            <div class=\\\"col-8 col-md-4 mb-3\\\">\\n                <div class=\\\"collapse\\\" id=\\\"collapseReviewImage\\\">\\n                    <img src=\\\"{{objectBook.images.main}}\\\" alt=\\\"Warning: No image link found. You must add a link for image\\\" class=\\\"w-100\\\">\\n                </div>\\n    \\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-12 col-sm-4 col-lg-4 mb-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"formAddBookSizeWidth\\\">Size (width)</label>\\n                            <input type=\\\"number\\\" min=\\\"0\\\" id=\\\"formAddBookSizeWidth\\\" name=\\\"formAddBookSizeWidth\\\" class=\\\"form-control myInput-elegant-2\\\" [(ngModel)]=\\\"objectBook.size.width\\\" #sizewidth=\\\"ngModel\\\" required>\\n                            <div *ngIf=\\\"sizewidth.invalid && (sizewidth.dirty || sizewidth.touched)\\\" class=\\\"\\\">\\n                                <div *ngIf=\\\"sizewidth.errors.required\\\" class=\\\"alert alert-danger\\\">\\n                                    Number is required.\\n                                </div>\\n                        </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-12 col-sm-4 col-lg-4 mb-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"formAddBookSizeHeight\\\">Size (height)</label>\\n                            <input type=\\\"number\\\" min=\\\"0\\\" id=\\\"formAddBookSizeHeight\\\" name=\\\"formAddBookSizeHeight\\\" class=\\\"form-control myInput-elegant-2\\\" [(ngModel)]=\\\"objectBook.size.height\\\" #sizeheight=\\\"ngModel\\\" required>\\n                            <div *ngIf=\\\"sizeheight.invalid && (sizeheight.dirty || sizeheight.touched)\\\" class=\\\"\\\">\\n                                <div *ngIf=\\\"sizeheight.errors.required\\\" class=\\\"alert alert-danger\\\">\\n                                    Number is required.\\n                                </div>\\n                        </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-12 col-sm-4 col-lg-4 mb-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"formAddBookSizeDepth\\\">Size (depth)</label>\\n                            <input type=\\\"number\\\" min=\\\"0\\\" id=\\\"formAddBookSizeDepth\\\" name=\\\"formAddBookSizeDepth\\\" class=\\\"form-control myInput-elegant-2\\\" [(ngModel)]=\\\"objectBook.size.depth\\\" #sizedepth=\\\"ngModel\\\" required>\\n                            <div *ngIf=\\\"sizedepth.invalid && (sizedepth.dirty || sizedepth.touched)\\\" class=\\\"\\\">\\n                                <div *ngIf=\\\"sizedepth.errors.required\\\" class=\\\"alert alert-danger\\\">\\n                                    Number is required.\\n                                </div>\\n                        </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n    \\n            <div class=\\\"col-12 mb-3\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"formAddBookShortDescription\\\">Short Description</label>\\n                    <textarea class=\\\"form-control myInput-elegant-2\\\" id=\\\"formAddBookShortDescription\\\" rows=\\\"3\\\"></textarea>\\n                </div>\\n            </div>\\n            <div class=\\\"col-12 mb-3\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"formAddBookFullDescription\\\">Full Description</label>\\n                    <!-- <textarea  class=\\\"form-control myInput-elegant-2\\\" id=\\\"formAddBookFullDescription\\\" rows=\\\"3\\\"></textarea> -->\\n                    <textarea [(ngModel)]=\\\"objectBook.fullDescription\\\" [froalaEditor]=\\\"HelloFroala\\\" class=\\\"form-control\\\" id=\\\"formAddBookFullDescription\\\" rows=\\\"10\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\n                </div>\\n    \\n            </div>\\n    \\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n// import { FormControl, FormGroup, Validators } from '@angular/forms';\n// import { forbiddenNameValidator } from '../app-directive/forbidden-name.directive';\nimport { BookService } from '../services/book.service';\nimport { GenreService } from '../services/genre.service';\nimport { Book } from '../view-models/book';\nimport { Genre } from '../view-models/genre';\nimport { Image } from '../view-models/image';\nimport { Size } from '../view-models/size';\n\n@Component({\n  selector: 'app-product-add',\n  templateUrl: './product-add.component.html',\n  styleUrls: ['./product-add.component.css']\n})\nexport class ProductAddComponent implements OnInit {\n  genres: Genre[];\n  // genre:Genre = new Genre();\n  objectBook: Book = new Book();\n  // test: string = this.genres[0].name;\n  // _id: string;\n  // title: string;\n  // shortDescription: string;\n  // fullDescription: string;\n  // author: string;\n  // publisher: string;\n  // pages: number;\n  // weight: number;\n  // sku: string;\n  // previousPrice: number;\n  // sellingPrice: number;\n  // releaseDate: string;\n  // images: Image;\n  // size: Size;\n  // genre: Genre;\n\n  constructor(private bookService: BookService, private genreService: GenreService) { }\n\n  ngOnInit() {\n    this.getGenre();\n    // this.objectBook.genre.name = this.genres[0].name;\n    if (this.objectBook.genre !== undefined) {\n      // this.objectBook.genre = this.genres[0];\n      alert(`baodoan: ${this.objectBook.genre.name}`);\n    }\n  }\n  getGenre(): void {\n    this.genreService.getGenres().subscribe(__ => this.genres = __)\n  }\n  addBook(): void {\n    this.bookService.addBook(this.objectBook).subscribe(_ => {\n      console.log(_);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <!-- <div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-4 mb-3\\\">\\n      <h5 class=\\\"mb-3\\\">Create New Product (Book)</h5>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"formAddBookTitle\\\">Title</label>\\n        <input type=\\\"text\\\" id=\\\"formAddBookTitle\\\" name=\\\"formAddBookTitle\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"formAddBookAuthor\\\">Author</label>\\n        <input type=\\\"text\\\" id=\\\"formAddBookAuthor\\\" name=\\\"formAddBookAuthor\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"formAddBookPublisher\\\">Publisher</label>\\n        <input type=\\\"text\\\" id=\\\"formAddBookPublisher\\\" name=\\\"formAddBookPublisher\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"formAddBookPages\\\">Pages</label>\\n        <input type=\\\"number\\\" id=\\\"formAddBookPages\\\" name=\\\"formAddBookPages\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"formAddBookWeight\\\">Weight</label>\\n        <input type=\\\"number\\\" id=\\\"formAddBookWeight\\\" name=\\\"formAddBookWeight\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"formAddBookSKU\\\">SKU</label>\\n        <input type=\\\"text\\\" id=\\\"formAddBookSKU\\\" name=\\\"formAddBookSKU\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"formAddBookPreviousPrice\\\">Previous Price</label>\\n        <input type=\\\"number\\\" id=\\\"formAddBookPreviousPrice\\\" name=\\\"formAddBookPreviousPrice\\\" class=\\\"form-control myInput-elegant-2\\\"\\n          placeholder=\\\"\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"formAddBookSellingPrice\\\">Selling Price</label>\\n        <input type=\\\"number\\\" id=\\\"formAddBookSellingPrice\\\" name=\\\"formAddBookSellingPrice\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"formAddBookReleaseDate\\\">Release Date</label>\\n        <input type=\\\"date\\\" id=\\\"formAddBookReleaseDate\\\" name=\\\"formAddBookReleaseDate\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"formAddBookShortDescription\\\">Short Description</label>\\n        <textarea class=\\\"form-control myInput-elegant-2\\\" id=\\\"formAddBookShortDescription\\\" rows=\\\"3\\\"></textarea>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"formAddBookFullDescription\\\">Full Description</label>\\n        <textarea class=\\\"form-control myInput-elegant-2\\\" id=\\\"formAddBookFullDescription\\\" rows=\\\"3\\\"></textarea>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"formAddBookImages\\\">Images</label>\\n        <input type=\\\"text\\\" id=\\\"formAddBookImages\\\" name=\\\"formAddBook\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n      </div>\\n      <div class=\\\"form-group w-50\\\">\\n        <label for=\\\"formAddBookSizeWidth\\\">Size (width)</label>\\n        <input type=\\\"number\\\" id=\\\"formAddBookSizeWidth\\\" name=\\\"formAddBookSizeWidth\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n      </div>\\n      <div class=\\\"form-group w-50\\\">\\n        <label for=\\\"formAddBookSizeDepth\\\">Size (depth)</label>\\n        <input type=\\\"number\\\" id=\\\"formAddBookSizeDepth\\\" name=\\\"formAddBookSizeDepth\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"formAddBookSelectGenre\\\">Genre</label>\\n        <select class=\\\"form-control\\\" id=\\\"formAddBookSelectGenre\\\">\\n          <option>Genre binding</option>\\n          <option>Genre binding</option>\\n          <option>Genre binding</option>\\n          <option>Genre binding</option>\\n          <option>Genre binding</option>\\n        </select>\\n      </div>\\n      <button class=\\\"btn btn-success d-block ml-auto\\\">\\n        <i class=\\\"fas fa-plus\\\"></i> Create</button>\\n    </div>\\n    <div class=\\\"col-12 col-md-4 mb-3\\\">\\n      <div class=\\\"d-flex flex-row justify-content-between align-items-center mb-3\\\">\\n        <span class=\\\"h5 mb-0\\\">Product List</span>\\n        <button (click)=\\\"getBooks()\\\" class=\\\"btn btn-ghost-primary\\\">\\n          <i class=\\\"fas fa-sync-alt\\\"></i> Refresh</button>\\n      </div>\\n\\n      <ul class=\\\"list-group list-unstyled border-0\\\">\\n        <li *ngFor=\\\"let book of books\\\" class=\\\"d-flex flex-row justify-content-between align-items-center\\\">\\n          <span (click)=\\\"onSelect(book)\\\" class=\\\"\\\">{{book.title}}</span>\\n          <button class=\\\"btn btn-sm\\\" title=\\\"Remove\\\">\\n            <i class=\\\"fas fa-times\\\"></i>\\n          </button>\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-12 col-md-4 mb-3\\\">\\n      <div class=\\\"d-flex flex-row justify-content-between align-items-center mb-3\\\">\\n        <span class=\\\"h5 mb-0\\\">Details</span>\\n        <button class=\\\"btn btn-ghost-primary\\\">\\n          <i class=\\\"fas fa-check\\\"></i> Update</button>\\n      </div>\\n      <div *ngIf=\\\"selectedBook\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"formEditBookTitle\\\">Title</label>\\n          <input [(ngModel)]=\\\"selectedBook.title\\\" type=\\\"text\\\" id=\\\"formEditBookTitle\\\" name=\\\"formEditBookTitle\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"formEditBookAuthor\\\">Author</label>\\n          <input [(ngModel)]=\\\"selectedBook.author\\\" type=\\\"text\\\" id=\\\"formEditBookAuthor\\\" name=\\\"formEditBookAuthor\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"formEditBookPublisher\\\">Publisher</label>\\n          <input [(ngModel)]=\\\"selectedBook.publisher\\\" type=\\\"text\\\" id=\\\"formEditBookPublisher\\\" name=\\\"formEditBookPublisher\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"formEditBookPages\\\">Pages</label>\\n          <input [(ngModel)]=\\\"selectedBook.pages\\\" type=\\\"number\\\" id=\\\"formEditBookPages\\\" name=\\\"formEditBookPages\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"formEditBookWeight\\\">Weight</label>\\n          <input [(ngModel)]=\\\"selectedBook.weight\\\" type=\\\"number\\\" id=\\\"formEditBookWeight\\\" name=\\\"formEditBookWeight\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"formEditBookSKU\\\">SKU</label>\\n          <input [(ngModel)]=\\\"selectedBook.sku\\\" type=\\\"text\\\" id=\\\"formEditBookSKU\\\" name=\\\"formEditBookSKU\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"formEditBookPreviousPrice\\\">Previous Price</label>\\n          <input [(ngModel)]=\\\"selectedBook.previousPrice\\\" type=\\\"number\\\" id=\\\"formEditBookPreviousPrice\\\" name=\\\"formEditBookPreviousPrice\\\" class=\\\"form-control myInput-elegant-2\\\"\\n            placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"formEditBookSellingPrice\\\">Selling Price</label>\\n          <input [(ngModel)]=\\\"selectedBook.sellingPrice\\\" type=\\\"number\\\" id=\\\"formEditBookSellingPrice\\\" name=\\\"formEditBookSellingPrice\\\" class=\\\"form-control myInput-elegant-2\\\"\\n            placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"formEditBookReleaseDate\\\">Release Date</label>\\n          <input [(ngModel)]=\\\"selectedBook.releaseDate\\\" type=\\\"string\\\" id=\\\"formEditBookReleaseDate\\\" name=\\\"formEditBookReleaseDate\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"formEditBookShortDescription\\\">Short Description</label>\\n          <textarea [(ngModel)]=\\\"selectedBook.shortDescription\\\" class=\\\"form-control myInput-elegant-2\\\" id=\\\"formEditBookShortDescription\\\" rows=\\\"3\\\"></textarea>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"formEditBookFullDescription\\\">Full Description</label>\\n          <textarea [(ngModel)]=\\\"selectedBook.fullDescription\\\" class=\\\"form-control myInput-elegant-2\\\" id=\\\"formEditBookFullDescription\\\" rows=\\\"3\\\"></textarea>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"formEditBookImages\\\">Images</label>\\n          <input [(ngModel)]=\\\"selectedBook.images.main\\\" type=\\\"text\\\" id=\\\"formEditBookImages\\\" name=\\\"formAddBook\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"form-group w-50\\\">\\n          <label for=\\\"formEditBookSizeWidth\\\">Size (width)</label>\\n          <input [(ngModel)]=\\\"selectedBook.size.width\\\" type=\\\"number\\\" id=\\\"formEditBookSizeWidth\\\" name=\\\"formEditBookSizeWidth\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"form-group w-50\\\">\\n          <label for=\\\"formEditBookSizeDepth\\\">Size (depth)</label>\\n          <input [(ngModel)]=\\\"selectedBook.size.depth\\\" type=\\\"number\\\" id=\\\"formEditBookSizeDepth\\\" name=\\\"formEditBookSizeDepth\\\" class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"formAddBookReSelectGenre\\\">Genre</label>\\n          <select class=\\\"form-control\\\" id=\\\"formAddBookReSelectGenre\\\">\\n            <option *ngFor=\\\"let book of books\\\">{{book.genre.name}}</option>\\n          </select>\\n        </div>\\n      </div>\\n      \\n    </div>\\n  </div>\\n</div> -->\\n    <div class=\\\"col-sm-6 col-md-4 mb-3\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search products\\\" aria-label=\\\"Search products\\\" aria-describedby=\\\"basic-addon2\\\">\\n        <div class=\\\"input-group-append\\\">\\n          <button class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\">\\n            <i class=\\\"fas fa-search\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-12 mb-3\\\">\\n      <a routerLink=\\\"/product-add\\\" href=\\\"\\\" class=\\\"text-success\\\">\\n        <i class=\\\"fas fa-plus-circle mr-2\\\"></i>\\n        <span class=\\\"text-underline\\\">Add new product</span>\\n      </a>\\n    </div>\\n    <div class=\\\"col-12 mb-3 table-responsive\\\">\\n      <table class=\\\"table table-striped table-hover table-outline mb-2\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th>Product</th>\\n            <th>Author</th>\\n            <th>Publisher</th>\\n            <th>\\n                <button (click)=\\\"getBooks()\\\" class=\\\"btn btn-link p-0 d-block ml-auto\\\" type=\\\"button\\\"><i class=\\\"fas fa-sync-alt\\\"></i> Refresh</button>\\n            </th>\\n          </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"books\\\" class=\\\"\\\">\\n          <tr *ngFor=\\\"let book of books\\\" title=\\\"Click to view details\\\" class=\\\"myCursor\\\">\\n\\n            <td (click)=\\\"onSelect(book)\\\" data-target=\\\"#modalProductDetail\\\" data-toggle=\\\"modal\\\">{{book.title}}</td>\\n            <td (click)=\\\"onSelect(book)\\\" data-target=\\\"#modalProductDetail\\\" data-toggle=\\\"modal\\\">{{book.author}}</td>\\n            <td (click)=\\\"onSelect(book)\\\" data-target=\\\"#modalProductDetail\\\" data-toggle=\\\"modal\\\">{{book.publisher}}</td>\\n            <td>\\n              <span class=\\\"d-block text-right\\\">\\n                <a (click)=\\\"onSelectEdit(book)\\\" class=\\\"mr-3\\\" data-toggle=\\\"modal\\\" title=\\\"Edit this item\\\"  data-target=\\\"#modalEdit\\\" href=\\\"\\\">Edit</a>\\n                <a (click)=\\\"onSelectDelete(book)\\\" class=\\\"text-danger\\\" title=\\\"Remove\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalDelete\\\" href=\\\"\\\">Delete</a>\\n              </span>\\n            </td>\\n          </tr>\\n         \\n        </tbody>\\n      </table>\\n      <p>Displaying {{books?.length || '0 item'}}\\n          <span *ngIf=\\\"books?.length == 1\\\">item</span> \\n          <span *ngIf=\\\"books?.length == 0\\\">item</span> \\n          <span *ngIf=\\\"books?.length\\\">items</span> \\n        </p>\\n    </div>\\n    <!-- Pagination -->\\n    <div class=\\\"col-12 d-flex justify-content-center mb-3\\\">\\n      <nav class=\\\"mb-3\\\" aria-label=\\\"Page navigation example\\\">\\n        <ul class=\\\"pagination\\\">\\n          <li class=\\\"page-item\\\">\\n            <a class=\\\"page-link\\\" href=\\\"#\\\">Previous</a>\\n          </li>\\n          <li class=\\\"page-item\\\">\\n            <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n          </li>\\n          <li class=\\\"page-item\\\">\\n            <a class=\\\"page-link\\\" href=\\\"#\\\">2</a>\\n          </li>\\n          <li class=\\\"page-item\\\">\\n            <a class=\\\"page-link\\\" href=\\\"#\\\">3</a>\\n          </li>\\n          <li class=\\\"page-item\\\">\\n            <a class=\\\"page-link\\\" href=\\\"#\\\">Next</a>\\n          </li>\\n        </ul>\\n      </nav>\\n    </div>\\n  </div>\\n</div>\\n<!-- MODAL: Details -->\\n<div id=\\\"modalProductDetail\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">Product Details</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"container-fluid\\\">\\n          <!-- <div class=\\\"row\\\" *ngIf=\\\"selectedBook\\\">\\n            <div class=\\\"col-4\\\">\\n              <img [src]=\\\"selectedBook.images.main\\\" class=\\\"w-100\\\" alt=\\\"\\\">\\n            </div>\\n            <div class=\\\"col-8 d-flex flex-column\\\">\\n              <h6>{{selectedBook.title}}</h6>\\n              <span>\\n                <span>Price:</span>\\n                <s class=\\\"mr-2\\\">{{selectedBook.previousPrice}}</s>\\n                <span class=\\\"text-danger\\\">{{selectedBook.sellingPrice}}</span>\\n              </span>\\n              <span>Publisher: {{selectedBook.publisher}}</span>\\n              <span>Pages: {{selectedBook.pages}}</span>\\n              <span>Weight: {{selectedBook.weight}}</span>\\n              <span>SKU: {{selectedBook.sku}}</span>\\n              <span>Release Date: {{selectedBook.releaseDate}}</span>\\n              <span>Dimension: {{selectedBook.size.width}} x {{selectedBook.size.height}} x {{selectedBook.size.depth}}</span>\\n              <span>Genre: {{selectedBook.genre.name}}</span>\\n              <span class=\\\"font-italic\\\">{{selectedBook.shortDescription}}</span>\\n            </div>\\n            <div class=\\\"col-12 mt-2\\\">\\n              <div [innerHTML]=\\\"selectedBook.fullDescription\\\"></div>\\n            </div>\\n          </div> -->\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button data-dismiss=\\\"modal\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!-- Modal: DELETE -->\\n<div *ngIf=\\\"selectedDelete\\\" id=\\\"modalDelete\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">Confirm delete</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Are you sure want to delete?</p>\\n        <b class=\\\"text-danger\\\">{{selectedDelete.title}} </b>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button (click)=\\\"deleteBook(selectedDelete)\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Delete</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Keep</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!-- Modal: EDIT BOOK -->\\n<div class=\\\"modal fade\\\" id=\\\"modalEdit\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalEditLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edit Product</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"container-fluid\\\">\\n          <div *ngIf=\\\"selectedEdit\\\" class=\\\"row\\\">\\n            <div class=\\\"col-12 mb-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"formAddBookTitle\\\">Title</label>\\n                <input [(ngModel)]=\\\"selectedEdit.title\\\" type=\\\"text\\\" id=\\\"formAddBookTitle\\\" name=\\\"formAddBookTitle\\\" class=\\\"form-control myInput-elegant-2\\\"\\n                  placeholder=\\\"\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"formAddBookAuthor\\\">Author</label>\\n                <input [(ngModel)]=\\\"selectedEdit.author\\\" type=\\\"text\\\" id=\\\"formAddBookAuthor\\\" name=\\\"formAddBookAuthor\\\" class=\\\"form-control myInput-elegant-2\\\"\\n                  placeholder=\\\"\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"formAddBookPublisher\\\">Publisher</label>\\n                <input [(ngModel)]=\\\"selectedEdit.publisher\\\" type=\\\"text\\\" id=\\\"formAddBookPublisher\\\" name=\\\"formAddBookPublisher\\\" class=\\\"form-control myInput-elegant-2\\\"\\n                  placeholder=\\\"\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"formAddBookSelectGenre\\\">Genre</label>\\n                <select *ngIf=\\\"genres\\\" [(ngModel)]=\\\"selectedEdit.genre\\\" [compareWith]=\\\"compareFn\\\" class=\\\"form-control\\\" id=\\\"formAddBookSelectGenre\\\">\\n                  <option *ngFor=\\\"let x of genres\\\" [ngValue]=\\\"x\\\">{{x.name}}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"formAddBookPages\\\">Pages</label>\\n                <input [ngModel]=\\\"selectedEdit.pages\\\" (ngModelChange)=\\\"selectedEdit.pages=$event\\\" type=\\\"number\\\" min=\\\"0\\\" id=\\\"formAddBookPages\\\" name=\\\"formAddBookPages\\\" class=\\\"form-control myInput-elegant-2\\\"\\n                  placeholder=\\\"\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n              <div class=\\\"form-group\\\" *ngIf=\\\"selectedEdit.weight\\\">\\n                <label for=\\\"formAddBookWeight\\\">Weight</label>\\n                <input [(ngModel)]=\\\"selectedEdit.weight\\\" type=\\\"number\\\" min=\\\"0\\\" id=\\\"formAddBookWeight\\\" name=\\\"formAddBookWeight\\\" class=\\\"form-control myInput-elegant-2\\\"\\n                  placeholder=\\\"\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n              <div class=\\\"form-group\\\" *ngIf=\\\"selectedEdit.releaseDate\\\">\\n                <label for=\\\"formAddBookReleaseDate\\\">Release Date</label>\\n                <input [(ngModel)]=\\\"selectedEdit.releaseDate\\\" type=\\\"text\\\" id=\\\"formAddBookReleaseDate\\\" name=\\\"formAddBookReleaseDate\\\" class=\\\"form-control myInput-elegant-2\\\"\\n                  placeholder=\\\"\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n              <div class=\\\"form-group\\\" *ngIf=\\\"selectedEdit.sku\\\">\\n                <label for=\\\"formAddBookSKU\\\">SKU</label>\\n                <input [(ngModel)]=\\\"selectedEdit.sku\\\" type=\\\"text\\\" id=\\\"formAddBookSKU\\\" name=\\\"formAddBookSKU\\\" class=\\\"form-control myInput-elegant-2\\\"\\n                  placeholder=\\\"\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n              <div class=\\\"form-group\\\" *ngIf=\\\"selectedEdit.previousPrice\\\">\\n                <label for=\\\"formAddBookPreviousPrice\\\">Previous Price (required)</label>\\n                <input [(ngModel)]=\\\"selectedEdit.previousPrice\\\" type=\\\"number\\\" min=\\\"0\\\" id=\\\"formAddBookPreviousPrice\\\" name=\\\"formAddBookPreviousPrice\\\"\\n                  class=\\\"form-control myInput-elegant-2\\\" placeholder=\\\"\\\">\\n                <span>{{selectedEdit.previousPrice}}</span>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-6 col-md-4 mb-3\\\">\\n              <div class=\\\"form-group\\\" *ngIf=\\\"selectedEdit.sellingPrice\\\">\\n                <label for=\\\"formAddBookSellingPrice\\\">Selling Price (required)</label>\\n                <input [(ngModel)]=\\\"selectedEdit.sellingPrice\\\" type=\\\"number\\\" min=\\\"0\\\" id=\\\"formAddBookSellingPrice\\\" name=\\\"formAddBookSellingPrice\\\" class=\\\"form-control myInput-elegant-2\\\"\\n                  placeholder=\\\"\\\">\\n                  <span>{{selectedEdit.sellingPrice}}</span>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12 col-md-8 mb-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"formAddBookImages\\\">Main Image</label>\\n                <input [(ngModel)]=\\\"selectedEdit.images.main\\\"  type=\\\"text\\\" id=\\\"formAddBookImages\\\" name=\\\"formAddBookImages\\\" class=\\\"form-control myInput-elegant-2 mb-2\\\"\\n                  placeholder=\\\"\\\" *ngIf=\\\"selectedEdit.images\\\">\\n                <a href=\\\"\\\" class=\\\"text-dark\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapseReviewImage\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseReviewImage\\\">\\n                  <i class=\\\"far fa-image\\\"></i> View Image</a>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12 col-md-10 col-lg-4 mb-3\\\" >\\n              <div class=\\\"collapse\\\" id=\\\"collapseReviewImage\\\">\\n                <img *ngIf=\\\"selectedEdit.images.main\\\" [src]=\\\"selectedEdit.images.main\\\" alt=\\\"Warning: No image link found. You must add a link for image\\\" class=\\\"w-100\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-sm-6 col-lg-4 mb-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"formAddBookSizeWidth\\\">Size (width)</label>\\n                    <input [(ngModel)]=\\\"selectedEdit.size.width\\\" type=\\\"number\\\" min=\\\"0\\\" id=\\\"formAddBookSizeWidth\\\" name=\\\"formAddBookSizeWidth\\\" class=\\\"form-control myInput-elegant-2\\\"\\n                      placeholder=\\\"\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"col-12 col-sm-6 col-lg-4 mb-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"formAddBookSizeHeight\\\">Size (height)</label>\\n                    <input [(ngModel)]=\\\"selectedEdit.size.height\\\" type=\\\"number\\\" min=\\\"0\\\" id=\\\"formAddBookSizeHeight\\\" name=\\\"formAddBookSizeHeight\\\" class=\\\"form-control myInput-elegant-2\\\"\\n                      placeholder=\\\"\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"col-12 col-sm-6 col-lg-4 mb-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"formAddBookSizeDepth\\\">Size (depth)</label>\\n                    <input [(ngModel)]=\\\"selectedEdit.size.depth\\\" type=\\\"number\\\" min=\\\"0\\\" sid=\\\"formAddBookSizeDepth\\\" name=\\\"formAddBookSizeDepth\\\" class=\\\"form-control myInput-elegant-2\\\"\\n                      placeholder=\\\"\\\">\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-12 mb-3\\\">\\n              <div class=\\\"form-group\\\" *ngIf=\\\"selectedEdit.shortDescription\\\">\\n                <label for=\\\"formAddBookShortDescription\\\">Short Description</label>\\n                <textarea [(ngModel)]=\\\"selectedEdit.shortDescription\\\" class=\\\"form-control myInput-elegant-2\\\" id=\\\"formAddBookShortDescription\\\"\\n                  rows=\\\"3\\\"></textarea>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12 mb-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"formAddBookFullDescription\\\" *ngIf=\\\"selectedEdit.fullDescription\\\">Full Description</label>\\n                <textarea [(ngModel)]=\\\"selectedEdit.fullDescription\\\" [froalaEditor]=\\\"HelloFroala\\\" class=\\\"form-control\\\" id=\\\"formAddBookFullDescription\\\"\\n                  rows=\\\"10\\\"></textarea>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button (click)=\\\"updateBook()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">Save changes</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Discard</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { BookService } from '../services/book.service';\nimport { Book } from '../view-models/book';\nimport { GenreService } from '../services/genre.service';\nimport { Genre } from '../view-models/genre';\nimport { Image } from '../view-models/image';\nimport { Size } from '../view-models/size';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n  books: Book[];\n  genre: Genre;\n  genres: Genre[];\n  selectedBook: Book;\n  selectedEdit: Book = new Book();\n  selectedDelete: Book;\n  constructor(private bookService:BookService, private genreService: GenreService) { }\n\n  ngOnInit() {\n    this.getBooks();\n    this.getGenres();\n  }\n  onSelect(book: Book): void {\n    this.selectedBook = book;\n    if (this.selectedBook.images == null) {\n      this.selectedBook.images = new Image();\n    }\n  }\n  onSelectEdit(book: Book): void {\n    this.selectedEdit = book;\n    if(this.selectedEdit.images==null)\n    {\n      this.selectedEdit.images = new Image();\n    }\n    // if (this.selectedEdit.previousPrice == null) {\n    //   this.selectedEdit.previousPrice = ;\n    // }\n    if (this.selectedEdit.size == null) {\n      this.selectedEdit.size = new Size();\n    }\n  }\n  onSelectDelete(book): void {\n    this.selectedDelete = book;\n  }\n  getBooks(): void {\n    this.bookService.getBooks().subscribe(z => this.books = z);\n  };\n  getGenres(): void {\n    this.genreService.getGenres().subscribe(_ => this.genres = _);\n  };\n  deleteBook(book: Book): void {\n    this.books = this.books.filter(h => h !== book);\n    this.bookService.deleteBook(book).subscribe();\n  }\n  updateBook():void{\n    this.bookService.updateBook(this.selectedEdit)\n      .subscribe();\n  }\n  compareFn(optionOne:Genre, optionTwo:Genre): boolean {\n    return optionOne._id == optionTwo._id;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Book } from '../view-models/book';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class BookService {\n  private booksUrl = 'http://green-web-bookshop.herokuapp.com/api/books';\n\n  constructor(private http: HttpClient) { }\n  /** GET api-s from the server */\n  getBooks(): Observable<Book[]> {\n    return this.http.get<Book[]>(this.booksUrl);\n  }\n  addBook(book: Book): Observable<Book> {\n    return this.http.post<Book>(this.booksUrl, book, httpOptions);\n  }\n  deleteBook (book: Book): Observable<Book> {\n    // const id = typeof genre === 'string' ? genre : genre._id;\n    const url = `${this.booksUrl}/${book._id}`;\n    return this.http.delete<Book>(url, httpOptions);\n  }\n  updateBook(book: Book): Observable<Book> {\n    const url = `${this.booksUrl}/${book._id}`;\n    return this.http.put<Book>(url, book, httpOptions )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Genre } from '../view-models/genre';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' \n})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GenreService {\n  name:string;\n  ten: string;\n  genresUrl = 'http://green-web-bookshop.herokuapp.com/api/genres';\n  \n  constructor(private http: HttpClient) { }\n  getGenres(): Observable<Genre[]> {\n    return this.http.get<Genre[]>(this.genresUrl);\n  }\n  addGenre(genre: Genre): Observable<Genre> {\n    return this.http.post<Genre>(this.genresUrl, genre, httpOptions);\n  }\n  deleteGenre (genre: Genre): Observable<Genre> {\n    // const id = typeof genre === 'string' ? genre : genre._id;\n    const url = `${this.genresUrl}/${genre._id}`;\n    return this.http.delete<Genre>(url, httpOptions);\n  }\n  /** PUT: update the hero on the server */\n  // updateGenre (genre: Genre): Observable<any> {\n  //   return this.http.put(this.genresUrl, genre, httpOptions);\n  // }\n  updateGenre(genre:Genre): Observable<Genre> {\n    const url = `${this.genresUrl}/${genre._id}`;\n    return this.http.put<Genre>(url, genre, httpOptions )\n  }\n  searchHeroes(term: string): Observable<Genre[]> {\n    if (!term.trim()) {\n      // if not search term, return empty hero array.\n      // return of([]);\n    }\n    return this.http.get<Genre[]>(`${this.genresUrl}/?name=${term}`);\n  }\n  onType(ten): boolean {\n    // return !this.name;\n    if (this.ten.length == 0) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  } // Note: this onType() makes button disabled when there is no value in Input\n\n}\n","import { Genre } from \"./genre\";\r\nimport { Comment } from \"./comment\";\r\nimport { Image } from \"./image\";\r\nimport { Size } from \"./size\";\r\n\r\nexport class Book {\r\n    _id: string;\r\n    title: string;\r\n    shortDescription: string;\r\n    fullDescription: string;\r\n    author: string;\r\n    publisher: string;\r\n    pages: number;\r\n    weight: number;\r\n    sku: string;\r\n    previousPrice: number;\r\n    sellingPrice: number;\r\n    releaseDate: string;\r\n    comments: Comment[];\r\n    createDate: string;\r\n    images: Image = new Image();\r\n    size: Size = new Size();\r\n    genre: Genre = new Genre();\r\n    \r\n    constructor(\r\n        // title: string\r\n        // genre: Genre\r\n    ) {\r\n        //  this.title = '';\r\n        //  this.shortDescription = '';\r\n        //  this.fullDescription = fullDescription;\r\n        // this.publisher = publisher;\r\n        // this.author = author;\r\n        // this.pages = pages;\r\n        // this.weight = weight;\r\n        // this.sku = sku;\r\n        // this.previousPrice = previousPrice;\r\n        // this.sellingPrice = sellingPrice;\r\n        // this.releaseDate = releaseDate;\r\n   \r\n        //  this.images = new Image('');\r\n        // this.size = size;\r\n        // this.genre = genre;\r\n    }\r\n}","export class Genre {\r\n    _id: string;\r\n    name: string;\r\n    create_date: string;\r\n    constructor(\r\n        // name: string\r\n    ) {\r\n        // this.name = '';\r\n    }\r\n    \r\n}\r\n\r\n","export class Image {\r\n    main: string;\r\n    \r\n}","export class Size {\r\n    width:number;\r\n    height:number;\r\n    depth:number;\r\n    constructor (\r\n        // width: number, height: number, depth: number\r\n    ) {\r\n        // this.width = width;\r\n        // this.height = height;\r\n        // this.depth = depth;\r\n\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}